{"fileNames":["./node_modules/typescript/lib/lib.d.ts","./node_modules/typescript/lib/lib.es5.d.ts","./node_modules/typescript/lib/lib.dom.d.ts","./node_modules/typescript/lib/lib.webworker.importscripts.d.ts","./node_modules/typescript/lib/lib.scripthost.d.ts","./node_modules/typescript/lib/lib.decorators.d.ts","./node_modules/typescript/lib/lib.decorators.legacy.d.ts","./node_modules/@types/estree/index.d.ts","./node_modules/rollup/dist/rollup.d.ts","./node_modules/vite/types/hmrpayload.d.ts","./node_modules/vite/types/customevent.d.ts","./node_modules/vite/types/hot.d.ts","./node_modules/vite/dist/node/modulerunnertransport.d-cxw_ws6p.d.ts","./node_modules/vite/dist/node/module-runner.d.ts","./node_modules/esbuild/lib/main.d.ts","./node_modules/source-map-js/source-map.d.ts","./node_modules/postcss/lib/previous-map.d.ts","./node_modules/postcss/lib/input.d.ts","./node_modules/postcss/lib/css-syntax-error.d.ts","./node_modules/postcss/lib/declaration.d.ts","./node_modules/postcss/lib/root.d.ts","./node_modules/postcss/lib/warning.d.ts","./node_modules/postcss/lib/lazy-result.d.ts","./node_modules/postcss/lib/no-work-result.d.ts","./node_modules/postcss/lib/processor.d.ts","./node_modules/postcss/lib/result.d.ts","./node_modules/postcss/lib/document.d.ts","./node_modules/postcss/lib/rule.d.ts","./node_modules/postcss/lib/node.d.ts","./node_modules/postcss/lib/comment.d.ts","./node_modules/postcss/lib/container.d.ts","./node_modules/postcss/lib/at-rule.d.ts","./node_modules/postcss/lib/list.d.ts","./node_modules/postcss/lib/postcss.d.ts","./node_modules/vite/types/internal/lightningcssoptions.d.ts","./node_modules/sass/types/deprecations.d.ts","./node_modules/sass/types/util/promise_or.d.ts","./node_modules/sass/types/importer.d.ts","./node_modules/sass/types/logger/source_location.d.ts","./node_modules/sass/types/logger/source_span.d.ts","./node_modules/sass/types/logger/index.d.ts","./node_modules/immutable/dist/immutable.d.ts","./node_modules/sass/types/value/boolean.d.ts","./node_modules/sass/types/value/calculation.d.ts","./node_modules/sass/types/value/color.d.ts","./node_modules/sass/types/value/function.d.ts","./node_modules/sass/types/value/list.d.ts","./node_modules/sass/types/value/map.d.ts","./node_modules/sass/types/value/mixin.d.ts","./node_modules/sass/types/value/number.d.ts","./node_modules/sass/types/value/string.d.ts","./node_modules/sass/types/value/argument_list.d.ts","./node_modules/sass/types/value/index.d.ts","./node_modules/sass/types/options.d.ts","./node_modules/sass/types/compile.d.ts","./node_modules/sass/types/exception.d.ts","./node_modules/sass/types/legacy/exception.d.ts","./node_modules/sass/types/legacy/plugin_this.d.ts","./node_modules/sass/types/legacy/function.d.ts","./node_modules/sass/types/legacy/importer.d.ts","./node_modules/sass/types/legacy/options.d.ts","./node_modules/sass/types/legacy/render.d.ts","./node_modules/sass/types/index.d.ts","./node_modules/vite/types/internal/csspreprocessoroptions.d.ts","./node_modules/vite/types/importglob.d.ts","./node_modules/vite/types/metadata.d.ts","./node_modules/vite/dist/node/index.d.ts","./node_modules/@babel/types/lib/index.d.ts","./node_modules/@types/babel__generator/index.d.ts","./node_modules/@babel/parser/typings/babel-parser.d.ts","./node_modules/@types/babel__template/index.d.ts","./node_modules/@types/babel__traverse/index.d.ts","./node_modules/@types/babel__core/index.d.ts","./node_modules/@vitejs/plugin-react/dist/index.d.ts","./vite.config.ts","./node_modules/@types/cookie/index.d.ts","./node_modules/@types/json-schema/index.d.ts","./node_modules/@types/react/global.d.ts","./node_modules/csstype/index.d.ts","./node_modules/@types/react/index.d.ts","./node_modules/@types/react-dom/index.d.ts"],"fileIdsList":[[68],[68,69,70,71,72],[68,70],[80],[78,79],[67,73],[31],[29,31],[20,28,29,30,32],[18],[21,26,31,34],[17,34],[21,22,25,26,27,34],[21,22,23,25,26,34],[18,19,20,21,22,26,27,28,30,31,32,34],[16,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33],[16,34],[21,23,24,26,27,34],[25,34],[26,27,31,34],[19,29],[8,9],[16,54],[41],[37,54],[36,37,38,41,53,54,55,56,57,58,59,60,61,62],[58],[36,38,41,59,60],[57,61],[36,39,40],[39],[36,37,38,41,53],[42,47,53],[53],[42,53],[42,43,44,45,46,47,48,49,50,51,52],[9,10,11,13,14,15,34,35,64,65,66,67],[10,11,12,13],[10],[11],[63],[9,67],[67,74]],"fileInfos":[{"version":"a7297ff837fcdf174a9524925966429eb8e5feecc2cc55cc06574e6b092c1eaa","impliedFormat":1},{"version":"e41c290ef7dd7dab3493e6cbe5909e0148edf4a8dad0271be08edec368a0f7b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"4fd3f3422b2d2a3dfd5cdd0f387b3a8ec45f006c6ea896a4cb41264c2100bb2c","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"785b9d575b49124ce01b46f5b9402157c7611e6532effa562ac6aebec0074dfc","impliedFormat":1},{"version":"b2950c2ab847031219cd1802fd55bcb854968f56ef65cf0e5df4c6fe5433e70b","affectsGlobalScope":true,"impliedFormat":1},{"version":"02b1133807234b1a7d9bf9b1419ee19444dd8c26b101bc268aa8181591241f1f","impliedFormat":1},{"version":"6222e987b58abfe92597e1273ad7233626285bc2d78409d4a7b113d81a83496b","impliedFormat":1},{"version":"cbe726263ae9a7bf32352380f7e8ab66ee25b3457137e316929269c19e18a2be","impliedFormat":1},{"version":"0a25f947e7937ee5e01a21eb10d49de3b467eba752d3b42ea442e9e773f254ef","impliedFormat":99},{"version":"f11151a83668f94c1e763e39d89c0022ceb74618f1bfcf67596044acbe306094","impliedFormat":99},{"version":"b8caba62c0d2ef625f31cbb4fde09d851251af2551086ccf068611b0a69efd81","affectsGlobalScope":true,"impliedFormat":1},{"version":"402e5c534fb2b85fa771170595db3ac0dd532112c8fa44fc23f233bc6967488b","impliedFormat":1},{"version":"8885cf05f3e2abf117590bbb951dcf6359e3e5ac462af1c901cfd24c6a6472e2","impliedFormat":1},{"version":"33f3718dababfc26dfd9832c150149ea4e934f255130f8c118a59ae69e5ed441","impliedFormat":1},{"version":"e61df3640a38d535fd4bc9f4a53aef17c296b58dc4b6394fd576b808dd2fe5e6","impliedFormat":1},{"version":"459920181700cec8cbdf2a5faca127f3f17fd8dd9d9e577ed3f5f3af5d12a2e4","impliedFormat":1},{"version":"4719c209b9c00b579553859407a7e5dcfaa1c472994bd62aa5dd3cc0757eb077","impliedFormat":1},{"version":"7ec359bbc29b69d4063fe7dad0baaf35f1856f914db16b3f4f6e3e1bca4099fa","impliedFormat":1},{"version":"70790a7f0040993ca66ab8a07a059a0f8256e7bb57d968ae945f696cbff4ac7a","impliedFormat":1},{"version":"d1b9a81e99a0050ca7f2d98d7eedc6cda768f0eb9fa90b602e7107433e64c04c","impliedFormat":1},{"version":"a022503e75d6953d0e82c2c564508a5c7f8556fad5d7f971372d2d40479e4034","impliedFormat":1},{"version":"b215c4f0096f108020f666ffcc1f072c81e9f2f95464e894a5d5f34c5ea2a8b1","impliedFormat":1},{"version":"644491cde678bd462bb922c1d0cfab8f17d626b195ccb7f008612dc31f445d2d","impliedFormat":1},{"version":"dfe54dab1fa4961a6bcfba68c4ca955f8b5bbeb5f2ab3c915aa7adaa2eabc03a","impliedFormat":1},{"version":"1bb61aa2f08ab4506d41dbe16c5f3f5010f014bbf46fa3d715c0cbe3b00f4e1c","impliedFormat":1},{"version":"47865c5e695a382a916b1eedda1b6523145426e48a2eae4647e96b3b5e52024f","impliedFormat":1},{"version":"e42820cd611b15910c204cd133f692dcd602532b39317d4f2a19389b27e6f03d","impliedFormat":1},{"version":"331b8f71bfae1df25d564f5ea9ee65a0d847c4a94baa45925b6f38c55c7039bf","impliedFormat":1},{"version":"2a771d907aebf9391ac1f50e4ad37952943515eeea0dcc7e78aa08f508294668","impliedFormat":1},{"version":"0146fd6262c3fd3da51cb0254bb6b9a4e42931eb2f56329edd4c199cb9aaf804","impliedFormat":1},{"version":"4ec16d7a4e366c06a4573d299e15fe6207fc080f41beac5da06f4af33ea9761e","impliedFormat":1},{"version":"75efcd28b68104f35f971fe3e2f29aea92a3fa704709aa88c9ea974bd7f20659","impliedFormat":1},{"version":"71b110829b8f5e7653352a132544ece2b9a10e93ba1c77453187673bd46f13ee","impliedFormat":1},{"version":"7c0ace9de3109ecdd8ad808dd40a052b82681786c66bb0bff6d848c1fc56a7c4","impliedFormat":1},{"version":"1223780c318ef42fd33ac772996335ed92d57cf7c0fc73178acab5e154971aab","impliedFormat":1},{"version":"0d04cbe88c8a25c2debd2eef03ec5674563e23ca9323fa82ede3577822653bd2","impliedFormat":1},{"version":"aaa70439f135c3fa0a34313de49e94cae3db954c8b8d6af0d56a46c998c2923f","impliedFormat":1},{"version":"304fd796c07465372159d7fdb72c7d793ce3556b25c598bdf2a579abe8e8fd37","impliedFormat":1},{"version":"daf07c1ca8ccfb21ad958833546a4f414c418fe096dcebdbb90b02e12aa5c3a2","impliedFormat":1},{"version":"89ac5224feeb2de76fc52fc2a91c5f6448a98dbe4e8d726ecb1730fa64cd2d30","impliedFormat":1},{"version":"7feb39ba69b3fc6d55faca4f91f06d77d15ffedd3931b0ef7740e8b6fd488b15","impliedFormat":1},{"version":"acf00cfabe8c4de18bea655754ea39c4d04140257556bbf283255b695d00e36f","impliedFormat":1},{"version":"39b70d5f131fcfdeba404ee63aba25f26d8376a73bacd8275fb5a9f06219ac77","impliedFormat":1},{"version":"cdae26c737cf4534eeec210e42eab2d5f0c3855240d8dde3be4aee9194e4e781","impliedFormat":1},{"version":"5aa0c50083d0d9a423a46afaef78c7f42420759cfa038ad40e8b9e6cafc38831","impliedFormat":1},{"version":"10d6a49a99a593678ba4ea6073d53d005adfc383df24a9e93f86bf47de6ed857","impliedFormat":1},{"version":"1b7ea32849a7982047c2e5d372300a4c92338683864c9ab0f5bbd1acadae83a3","impliedFormat":1},{"version":"224083e6fcec1d300229da3d1dafc678c642863996cbfed7290df20954435a55","impliedFormat":1},{"version":"4248ac3167b1a1ce199fda9307abc314b3132527aeb94ec30dbcfe4c6a417b1b","impliedFormat":1},{"version":"633cb8c2c51c550a63bda0e3dec0ad5fa1346d1682111917ad4bc7005d496d8c","impliedFormat":1},{"version":"ca055d26105248f745ea6259b4c498ebeed18c9b772e7f2b3a16f50226ff9078","impliedFormat":1},{"version":"ea6b2badb951d6dfa24bb7d7eb733327e5f9a15fc994d6dc1c54b2c7a83b6a0b","impliedFormat":1},{"version":"03fdf8dba650d830388b9985750d770dd435f95634717f41cea814863a9ac98b","impliedFormat":1},{"version":"6fd08e3ef1568cd0dc735c9015f6765e25143a4a0331d004a29c51b50eec402a","impliedFormat":1},{"version":"2e988cd4d24edac4936449630581c79686c8adac10357eb0cdb410c24f47c7f0","impliedFormat":1},{"version":"b813f62a37886ed986b0f6f8c5bf323b3fcae32c1952b71d75741e74ea9353cf","impliedFormat":1},{"version":"44a1a722038365972b1b52841e1132785bf5d75839dbc6cc1339f2d36f8507a1","impliedFormat":1},{"version":"83fe1053701101ac6d25364696fea50d2ceb2f81d1456bc11e682a20aaeac52e","impliedFormat":1},{"version":"4f228cb2089a5a135a1a8cefe612d5aebcef8258f7dbe3b7c4dad4e26a81ec08","impliedFormat":1},{"version":"7870becb94cbc11d2d01b77c4422589adcba4d8e59f726246d40cd0d129784d8","affectsGlobalScope":true,"impliedFormat":1},{"version":"7f698624bbbb060ece7c0e51b7236520ebada74b747d7523c7df376453ed6fea","impliedFormat":1},{"version":"8f07f2b6514744ac96e51d7cb8518c0f4de319471237ea10cf688b8d0e9d0225","impliedFormat":1},{"version":"08971f8379717d46a8a990ce9a7eed3af3e47e22c3d45c3a046054b7a2fffe7a","impliedFormat":99},{"version":"8d27e5f73b75340198b2df36f39326f693743e64006bd7b88a925a5f285df628","impliedFormat":1},{"version":"2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","impliedFormat":1},{"version":"1c2cd862994b1fbed3cde0d1e8de47835ff112d197a3debfddf7b2ee3b2c52bc","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"9e0cf651e8e2c5b9bebbabdff2f7c6f8cedd91b1d9afcc0a854cdff053a88f1b","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"f5e8546cfe500116aba8a6cb7ee171774b14a6db30d4bcd6e0aa5073e919e739","impliedFormat":1},{"version":"c27c786934406e48f633dbafdb0e435fcc9b1c6dabe9e6fa06f0e953ca5e5c03","signature":"4b96dd19fd2949d28ce80e913412b0026dc421e5bf6c31d87c7b5eb11b5753b4"},{"version":"1748c03e7a7d118f7f6648c709507971eb0d416f489958492c5ae625de445184","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"36a2e4c9a67439aca5f91bb304611d5ae6e20d420503e96c230cf8fcdc948d94","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"51409be337d5cdf32915ace99a4c49bf62dbc124a49135120dfdff73236b0bad","impliedFormat":1},{"version":"115b2ad73fa7d175cd71a5873d984c21593b2a022f1a2036cc39d9f53629e5dc","impliedFormat":1}],"root":[75],"options":{"allowSyntheticDefaultImports":true,"composite":true,"module":99},"referencedMap":[[70,1],[73,2],[69,1],[71,3],[72,1],[81,4],[80,5],[74,6],[32,7],[30,8],[31,9],[19,10],[20,8],[27,11],[18,12],[23,13],[24,14],[29,15],[34,16],[17,17],[25,18],[26,19],[21,20],[28,7],[22,21],[9,22],[55,23],[56,24],[38,25],[63,26],[59,27],[60,27],[61,28],[62,29],[41,30],[40,31],[54,32],[52,33],[43,34],[44,35],[45,35],[46,34],[53,36],[47,35],[48,33],[49,34],[50,35],[51,34],[67,37],[14,38],[13,39],[11,39],[12,40],[64,41],[66,42],[75,43]],"semanticDiagnosticsPerFile":[[9,[{"start":6066,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":15308,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":25367,"length":21,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":25368,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585}]],[12,[{"start":118,"length":20,"messageText":"A computed property name in a type literal must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1170},{"start":119,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585}]],[14,[{"start":1100,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":1539,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":1579,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":1643,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":1706,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":1791,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":7645,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":7671,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":7971,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":8036,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":8048,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":8106,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":8816,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583}]],[23,[{"start":1473,"length":9,"messageText":"Property 'finally' does not exist on type 'Promise<Result_<RootNode>>'.","category":1,"code":2339},{"start":3980,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585}]],[24,[{"start":1067,"length":9,"messageText":"Property 'finally' does not exist on type 'Promise<Result_<Root_>>'.","category":1,"code":2339},{"start":1294,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585}]],[42,[{"start":4977,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":8308,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":8359,"length":4,"code":2430,"category":1,"messageText":{"messageText":"Interface 'List<T>' incorrectly extends interface 'Indexed<T>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'zip(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'Set<string | List<[T, any]>> & OrderedSet<string | List<[T, any]>>' is not assignable to type 'Set<string | Indexed<[T, any]>> & OrderedSet<string | Indexed<[T, any]>>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<string | List<[T, any]>> & OrderedSet<string | List<[T, any]>>' is not assignable to type 'Set<string | Indexed<[T, any]>>'.","category":1,"code":2322,"next":[{"messageText":"The types of 'toSeq().toSet().toOrderedSet().zip(...).toSeq().toStack().zip(...).toSeq().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Collection<unknown, [[[string | List<[T, any]>, any], any], any]>[]) => Indexed<[[[string | List<[T, any]>, any], any], any]>' is not assignable to type '(...collections: Collection<unknown, [[[string | Indexed<[T, any]>, any], any], any]>[]) => Indexed<[[[string | Indexed<[T, any]>, any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Collection<unknown, [[[string | Indexed<[T, any]>, any], any], any]>' is not assignable to type 'Collection<unknown, [[[string | List<[T, any]>, any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Indexed<[T, any]>' is not assignable to type 'string | List<[T, any]>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Indexed<[T, any]>' is not assignable to type 'string | List<[T, any]>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Indexed<[T, any]>' is missing the following properties from type 'List<[T, any]>': size, set, delete, remove, and 18 more.","category":1,"code":2740,"canonicalHead":{"code":2322,"messageText":"Type 'Indexed<[T, any]>' is not assignable to type 'List<[T, any]>'."}}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Collection<unknown, [[[string | Indexed<[T, any]>, any], any], any]>' is not assignable to type 'Collection<unknown, [[[string | List<[T, any]>, any], any], any]>'."}}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Set<string | List<[T, any]>> & OrderedSet<string | List<[T, any]>>' is not assignable to type 'Set<string | Indexed<[T, any]>>'."}}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '{ <U>(other: Collection<unknown, U>): List<[T, U]>; <U, V>(other: Collection<unknown, U>, other2: Collection<unknown, V>): List<[T, U, V]>; (...collections: Collection<...>[]): List<...>; }' is not assignable to type '{ <U>(other: Collection<unknown, U>): Indexed<[T, U]>; <U, V>(other: Collection<unknown, U>, other2: Collection<unknown, V>): Indexed<[T, U, V]>; (...collections: Collection<...>[]): Indexed<...>; }'."}}]}]}},{"start":16757,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":17792,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":17840,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":18002,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":18134,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":18335,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":18538,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":19694,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":19761,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":20390,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":26577,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":26938,"length":5,"code":2430,"category":1,"messageText":{"messageText":"Interface 'MapOf<R>' incorrectly extends interface 'Map<keyof R, R[keyof R]>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'toJS()' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type '{ [K in keyof R]: DeepCopy<R[K]>; }' is not assignable to type '{ [x: string]: DeepCopy<R[keyof R]>; [x: number]: DeepCopy<R[keyof R]>; [x: symbol]: DeepCopy<R[keyof R]>; }'.","category":1,"code":2322,"next":[{"messageText":"Type 'DeepCopy<R[K]>' is not assignable to type 'DeepCopy<R[keyof R]>'.","category":1,"code":2322,"next":[{"messageText":"Type 'object | (R[K] extends MapOf<infer R extends { [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; }> ? { [key in keyof R]: ContainObject<R[key]> extends true ? unknown : R[key]; } : R[K] extends Keyed<...> ? { [key in KeyedKey extends string | ... 1 more ... | symbol ? KeyedKey : string]: V extends ob...' is not assignable to type 'DeepCopy<R[keyof R]>'.","category":1,"code":2322,"next":[{"messageText":"Type 'object' is not assignable to type 'DeepCopy<R[keyof R]>'.","category":1,"code":2322,"next":[{"messageText":"Type 'R[K] extends MapOf<infer R extends { [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; }> ? { [key in keyof R]: ContainObject<R[key]> extends true ? unknown : R[key]; } : R[K] extends Keyed<...> ? { [key in KeyedKey extends string | ... 1 more ... | symbol ? KeyedKey : string]: V extends object ? unk...' is not assignable to type 'R[keyof R] extends MapOf<infer R extends { [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; }> ? { [key in keyof R]: ContainObject<R[key]> extends true ? unknown : R[key]; } : R[keyof R] extends Keyed<...> ? { [key in KeyedKey extends string | ... 1 more ... | symbol ? KeyedKey : string]: V extends ...'.","category":1,"code":2322,"next":[{"messageText":"Type '{ [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; } | (R[K] extends Keyed<infer KeyedKey, infer V> ? { [key in KeyedKey extends string | number | symbol ? KeyedKey : string]: V extends object ? unknown : V; } : R[K] extends Collection<...> ? DeepCopy<...>[] : R[K] extends string | number ? R[K] : R...' is not assignable to type 'R[keyof R] extends MapOf<infer R extends { [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; }> ? { [key in keyof R]: ContainObject<R[key]> extends true ? unknown : R[key]; } : R[keyof R] extends Keyed<...> ? { [key in KeyedKey extends string | ... 1 more ... | symbol ? KeyedKey : string]: V extends ...'.","category":1,"code":2322,"next":[{"messageText":"Type '{ [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; }' is not assignable to type 'R[keyof R] extends MapOf<infer R extends { [x: string]: unknown; [x: number]: unknown; [x: symbol]: unknown; }> ? { [key in keyof R]: ContainObject<R[key]> extends true ? unknown : R[key]; } : R[keyof R] extends Keyed<...> ? { [key in KeyedKey extends string | ... 1 more ... | symbol ? KeyedKey : string]: V extends ...'.","category":1,"code":2322,"next":[{"messageText":"Type 'R[K] extends Keyed<infer KeyedKey, infer V> ? { [key in KeyedKey extends string | number | symbol ? KeyedKey : string]: V extends object ? unknown : V; } : R[K] extends Collection<...> ? DeepCopy<...>[] : R[K] extends string | number ? R[K] : R[K] extends Iterable<...> ? DeepCopy<...>[] : R[K] extends object ? { [Ob...' is not assignable to type 'R[keyof R] extends Keyed<infer KeyedKey, infer V> ? { [key in KeyedKey extends string | number | symbol ? KeyedKey : string]: V extends object ? unknown : V; } : R[keyof R] extends Collection<...> ? DeepCopy<...>[] : R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<...> ? DeepCopy<...>[]...'.","category":1,"code":2322,"next":[{"messageText":"Type '{ [x: string]: unknown; } | (R[K] extends Collection<infer _, infer V> ? DeepCopy<V>[] : R[K] extends string | number ? R[K] : R[K] extends Iterable<...> ? DeepCopy<...>[] : R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<...> extends true ? unknown : R[K][ObjectKey]; } : R[K])' is not assignable to type 'R[keyof R] extends Keyed<infer KeyedKey, infer V> ? { [key in KeyedKey extends string | number | symbol ? KeyedKey : string]: V extends object ? unknown : V; } : R[keyof R] extends Collection<...> ? DeepCopy<...>[] : R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<...> ? DeepCopy<...>[]...'.","category":1,"code":2322,"next":[{"messageText":"Type '{ [x: string]: unknown; }' is not assignable to type 'R[keyof R] extends Keyed<infer KeyedKey, infer V> ? { [key in KeyedKey extends string | number | symbol ? KeyedKey : string]: V extends object ? unknown : V; } : R[keyof R] extends Collection<...> ? DeepCopy<...>[] : R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<...> ? DeepCopy<...>[]...'.","category":1,"code":2322,"next":[{"messageText":"Type 'R[K] extends Collection<infer _, infer V> ? DeepCopy<V>[] : R[K] extends string | number ? R[K] : R[K] extends Iterable<...> ? DeepCopy<...>[] : R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<...> extends true ? unknown : R[K][ObjectKey]; } : R[K]' is not assignable to type 'R[keyof R] extends Collection<infer _, infer V> ? DeepCopy<V>[] : R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<...> ? DeepCopy<...>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type '...[][][][][][][][][][][][] | (R[K] extends string | number ? R[K] : R[K] extends Iterable<infer V> ? DeepCopy<V>[] : R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<R[K][ObjectKey]> extends true ? unknown : R[K][ObjectKey]; } : R[K])' is not assignable to type 'R[keyof R] extends Collection<infer _, infer V> ? DeepCopy<V>[] : R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<...> ? DeepCopy<...>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type '...[][][][][][][][][][][][]' is not assignable to type 'R[keyof R] extends Collection<infer _, infer V> ? DeepCopy<V>[] : R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<...> ? DeepCopy<...>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type 'R[K] extends string | number ? R[K] : R[K] extends Iterable<infer V> ? DeepCopy<V>[] : R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<R[K][ObjectKey]> extends true ? unknown : R[K][ObjectKey]; } : R[K]' is not assignable to type 'R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type 'R[K] | (R[K] extends Iterable<infer V> ? DeepCopy<V>[] : R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<R[K][ObjectKey]> extends true ? unknown : R[K][ObjectKey]; } : R[K])' is not assignable to type 'R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type '(string | number) & R[K]' is not assignable to type 'R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type 'string & R[K]' is not assignable to type 'R[keyof R] extends string | number ? R[keyof R] : R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<...> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type 'R[K] extends Iterable<infer V> ? DeepCopy<V>[] : R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<R[K][ObjectKey]> extends true ? unknown : R[K][ObjectKey]; } : R[K]' is not assignable to type 'R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<R[keyof R][ObjectKey]> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type '...[][][][][][][][][][][] | (R[K] extends object ? { [ObjectKey in keyof R[K]]: ContainObject<R[K][ObjectKey]> extends true ? unknown : R[K][ObjectKey]; } : R[K])' is not assignable to type 'R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<R[keyof R][ObjectKey]> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type '...[][][][][][][][][][][][]' is not assignable to type 'R[keyof R] extends Iterable<infer V> ? DeepCopy<V>[] : R[keyof R] extends object ? { [ObjectKey in keyof R[keyof R]]: ContainObject<R[keyof R][ObjectKey]> extends true ? unknown : R[keyof R][ObjectKey]; } : R[keyof R]'.","category":1,"code":2322,"next":[{"messageText":"Type '...[][][][][][][][][][][][]' is not assignable to type 'DeepCopy<V>[]'.","category":1,"code":2322,"next":[{"messageText":"Type '...[][][][][][][][][][][][]' is not assignable to type 'DeepCopy<V>'.","category":1,"code":2322}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '() => { [K in keyof R]: DeepCopy<R[K]>; }' is not assignable to type '() => { [x: string]: DeepCopy<R[keyof R]>; [x: number]: DeepCopy<R[keyof R]>; [x: symbol]: DeepCopy<R[keyof R]>; }'."}}]}]}},{"start":29677,"length":3,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Map<K, V>' incorrectly extends interface 'Keyed<K, V>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'flip().concat(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'Set<string | Map<any, any>> & OrderedSet<string | Map<any, any>>' is not assignable to type 'Set<string | Keyed<any, any>> & OrderedSet<string | Keyed<any, any>>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<string | Map<any, any>> & OrderedSet<string | Map<any, any>>' is not assignable to type 'Set<string | Keyed<any, any>>'.","category":1,"code":2322,"next":[{"messageText":"The types of 'toSeq().toOrderedSet().zip(...).toSeq().toList().zip(...).toSeq().zip(...).toStack().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Collection<unknown, [[[[string | Map<any, any>, any], any], any], any]>[]) => Stack<[[[[string | Map<any, any>, any], any], any], any]>' is not assignable to type '(...collections: Collection<unknown, [[[[string | Keyed<any, any>, any], any], any], any]>[]) => Stack<[[[[string | Keyed<any, any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Collection<unknown, [[[[string | Keyed<any, any>, any], any], any], any]>' is not assignable to type 'Collection<unknown, [[[[string | Map<any, any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Keyed<any, any>' is not assignable to type 'string | Map<any, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Keyed<any, any>' is not assignable to type 'string | Map<any, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Keyed<any, any>' is missing the following properties from type 'Map<any, any>': size, set, delete, remove, and 17 more.","category":1,"code":2740,"canonicalHead":{"code":2322,"messageText":"Type 'Keyed<any, any>' is not assignable to type 'Map<any, any>'."}}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Collection<unknown, [[[[string | Keyed<any, any>, any], any], any], any]>' is not assignable to type 'Collection<unknown, [[[[string | Map<any, any>, any], any], any], any]>'."}}]}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Set<string | Map<any, any>> & OrderedSet<string | Map<any, any>>' is not assignable to type 'Set<string | Keyed<any, any>>'."}}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '() => Map<V, K>' is not assignable to type '() => Keyed<V, K>'."}}]}]}},{"start":31584,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":31624,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":36561,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":36778,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":37772,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":39330,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":40488,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":42613,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":42924,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":42972,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":46209,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":46341,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":46848,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":47370,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":51289,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":55653,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":57436,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":57667,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":57961,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":58246,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":59494,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":62070,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":62079,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":62473,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":62482,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":62767,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":62817,"length":3,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Immutable.Set<T>' incorrectly extends interface 'Immutable.Collection.Set<T>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'concat(...).filter(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'Immutable.Set<string | Immutable.Set<any>> & Immutable.OrderedSet<string | Immutable.Set<any>>' is not assignable to type 'Immutable.Set<string | Immutable.Collection.Set<any>> & Immutable.OrderedSet<string | Immutable.Collection.Set<any>>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<string | Set<any>> & OrderedSet<string | Set<any>>' is not assignable to type 'Set<string | Set<any>>'.","category":1,"code":2322,"next":[{"messageText":"The types of 'toSeq().toOrderedSet().zip(...).toSeq().toList().zip(...).toSeq().zip(...).toStack().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Immutable.Collection<unknown, [[[[string | Immutable.Set<any>, any], any], any], any]>[]) => Immutable.Stack<[[[[string | Immutable.Set<any>, any], any], any], any]>' is not assignable to type '(...collections: Immutable.Collection<unknown, [[[[string | Immutable.Collection.Set<any>, any], any], any], any]>[]) => Immutable.Stack<[[[[string | Immutable.Collection.Set<any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Immutable.Collection<unknown, [[[[string | Immutable.Collection.Set<any>, any], any], any], any]>' is not assignable to type 'Immutable.Collection<unknown, [[[[string | Immutable.Set<any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Immutable.Collection.Set<any>' is not assignable to type 'string | Immutable.Set<any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<any>' is not assignable to type 'string | Set<any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<any>' is missing the following properties from type 'Set<any>': size, add, delete, remove, and 9 more.","category":1,"code":2740,"canonicalHead":{"code":2322,"messageText":"Type 'Immutable.Collection.Set<any>' is not assignable to type 'Immutable.Set<any>'."}}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Immutable.Collection<unknown, [[[[string | Immutable.Collection.Set<any>, any], any], any], any]>' is not assignable to type 'Immutable.Collection<unknown, [[[[string | Immutable.Set<any>, any], any], any], any]>'."}}]}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Set<string | Set<any>> & OrderedSet<string | Set<any>>' is not assignable to type 'Set<string | Set<any>>'."}}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '<C>(...collections: Iterable<C>[]) => Set<T | C>' is not assignable to type '<U>(...collections: Iterable<U>[]) => Set<T | U>'."}}]}]}},{"start":63848,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":63910,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":63973,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":64215,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":64612,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":65891,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":70238,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":70298,"length":10,"code":2430,"category":1,"messageText":{"messageText":"Interface 'OrderedSet<T>' incorrectly extends interface 'Set<T>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'union(...).map(...).filter(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().toSeq().toList().zip(...).toSeq().zip(...).toSet().toSeq().toStack().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Collection<unknown, [[[string | OrderedSet<any>, any], any], any]>[]) => Stack<[[[string | OrderedSet<any>, any], any], any]>' is not assignable to type '(...collections: Collection<unknown, [[[string | Set<any>, any], any], any]>[]) => Stack<[[[string | Set<any>, any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Collection<unknown, [[[string | Set<any>, any], any], any]>' is not assignable to type 'Collection<unknown, [[[string | OrderedSet<any>, any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Set<any>' is not assignable to type 'string | OrderedSet<any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<any>' is not assignable to type 'string | OrderedSet<any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<any>' is missing the following properties from type 'OrderedSet<any>': zip, zipAll, zipWith","category":1,"code":2739,"canonicalHead":{"code":2322,"messageText":"Type 'Set<any>' is not assignable to type 'OrderedSet<any>'."}}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Collection<unknown, [[[string | Set<any>, any], any], any]>' is not assignable to type 'Collection<unknown, [[[string | OrderedSet<any>, any], any], any]>'."}}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '<C>(...collections: Iterable<C>[]) => OrderedSet<T | C>' is not assignable to type '<C>(...collections: Iterable<C>[]) => Set<T | C>'."}}]}]}},{"start":70695,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":70764,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":70834,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":71389,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":75867,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":75919,"length":5,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Stack<T>' incorrectly extends interface 'Indexed<T>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'zip(...).zip(...).toSeq().zip(...).toMap().mapKeys(...).toSeq().flip().toOrderedMap().merge(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'OrderedMap<string | [[[T, any], any], any], any>' is not assignable to type 'OrderedMap<string | [unknown, any], any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'string | [unknown, any]' is not assignable to type 'string | [[[T, any], any], any]'.","category":1,"code":2322,"next":[{"messageText":"Type '[unknown, any]' is not assignable to type 'string | [[[T, any], any], any]'.","category":1,"code":2322,"next":[{"messageText":"Type '[unknown, any]' is not assignable to type '[[[T, any], any], any]'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type 'unknown' is not assignable to type '[[T, any], any]'.","category":1,"code":2322,"canonicalHead":{"code":2322,"messageText":"Type '[unknown, any]' is not assignable to type '[[[T, any], any], any]'."}}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '{ <U>(other: Collection<unknown, U>): Stack<[T, U]>; <U, V>(other: Collection<unknown, U>, other2: Collection<unknown, V>): Stack<[T, U, V]>; (...collections: Collection<...>[]): Stack<...>; }' is not assignable to type '{ <U>(other: Collection<unknown, U>): Indexed<[T, U]>; <U, V>(other: Collection<unknown, U>, other2: Collection<unknown, V>): Indexed<[T, U, V]>; (...collections: Collection<...>[]): Indexed<...>; }'."}}]}]}},{"start":76795,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":77469,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":78540,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":79173,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":92835,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":92955,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":93258,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":94453,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":94501,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":94875,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":94978,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":95162,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":95344,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":95840,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":95911,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":96007,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":96097,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":96228,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":96276,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":97416,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":97417,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":97437,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":100848,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":100971,"length":5,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Immutable.Seq.Keyed<K, V>' incorrectly extends interface 'Immutable.Collection.Keyed<K, V>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'flip().concat(...).map(...).filter' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '{ <F extends M>(predicate: (value: M, key: any, iter: Immutable.Seq.Keyed<any, M>) => value is F, context?: unknown): Immutable.Seq.Keyed<any, F>; (predicate: (value: M, key: any, iter: Immutable.Seq.Keyed<...>) => unknown, context?: unknown): Immutable.Seq.Keyed<...>; }' is not assignable to type '{ <F extends M>(predicate: (value: M, key: any, iter: Immutable.Collection.Keyed<any, M>) => value is F, context?: unknown): Immutable.Collection.Keyed<any, F>; (predicate: (value: M, key: any, iter: Immutable.Collection.Keyed<...>) => unknown, context?: unknown): Immutable.Collection.Keyed<...>; }'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'predicate' and 'predicate' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type '(value: M, key: any, iter: Keyed<any, M>) => unknown' is not assignable to type '(value: M, key: any, iter: Keyed<any, M>) => value is any'.","category":1,"code":2322,"next":[{"messageText":"Signature '(value: M, key: any, iter: Keyed<any, M>): unknown' must be a type predicate.","category":1,"code":1224}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '() => Immutable.Seq.Keyed<V, K>' is not assignable to type '() => Immutable.Collection.Keyed<V, K>'."}}]}]}},{"start":100971,"length":5,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Keyed<K, V>' incorrectly extends interface 'Seq<K, V>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'map(...).map(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'Set<string | Keyed<K, any>> & OrderedSet<string | Keyed<K, any>>' is not assignable to type 'Set<string | Seq<any, any>> & OrderedSet<string | Seq<any, any>>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<string | Keyed<K, any>> & OrderedSet<string | Keyed<K, any>>' is not assignable to type 'Set<string | Seq<any, any>>'.","category":1,"code":2322,"next":[{"messageText":"The types of 'toSeq().toOrderedSet().zip(...).toSeq().toList().zip(...).toSeq().zip(...).toStack().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Collection<unknown, [[[[string | Keyed<K, any>, any], any], any], any]>[]) => Stack<[[[[string | Keyed<K, any>, any], any], any], any]>' is not assignable to type '(...collections: Collection<unknown, [[[[string | Seq<any, any>, any], any], any], any]>[]) => Stack<[[[[string | Seq<any, any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Collection<unknown, [[[[string | Seq<any, any>, any], any], any], any]>' is not assignable to type 'Collection<unknown, [[[[string | Keyed<K, any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Seq<any, any>' is not assignable to type 'string | Keyed<K, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Seq<any, any>' is not assignable to type 'string | Keyed<K, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Seq<any, any>' is missing the following properties from type 'Keyed<K, any>': mapKeys, mapEntries, flip","category":1,"code":2739,"canonicalHead":{"code":2322,"messageText":"Type 'Seq<any, any>' is not assignable to type 'Keyed<K, any>'."}}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Collection<unknown, [[[[string | Seq<any, any>, any], any], any], any]>' is not assignable to type 'Collection<unknown, [[[[string | Keyed<K, any>, any], any], any], any]>'."}}]}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Set<string | Keyed<K, any>> & OrderedSet<string | Keyed<K, any>>' is not assignable to type 'Set<string | Seq<any, any>>'."}}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '<M>(mapper: (value: V, key: K, iter: this) => M, context?: unknown) => Keyed<K, M>' is not assignable to type '{ <M>(mapper: (value: V, key: K, iter: this) => M, context?: unknown): Seq<K, M>; <M>(mapper: (value: V, key: K, iter: this) => M, context?: unknown): Seq<M, M>; }'."}}]}]}},{"start":101877,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":103230,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":104388,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":104389,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":104409,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":104994,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":105059,"length":7,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Immutable.Seq.Indexed<T>' incorrectly extends interface 'Immutable.Collection.Indexed<T>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'zip(...).zip(...).toSeq().zip(...).toMap().mapKeys(...).toSeq().flip().toOrderedMap().merge(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'OrderedMap<string | [[[T, any], any], any], any>' is not assignable to type 'OrderedMap<string | [unknown, any], any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'string | [unknown, any]' is not assignable to type 'string | [[[T, any], any], any]'.","category":1,"code":2322,"next":[{"messageText":"Type '[unknown, any]' is not assignable to type 'string | [[[T, any], any], any]'.","category":1,"code":2322,"next":[{"messageText":"Type '[unknown, any]' is not assignable to type '[[[T, any], any], any]'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type 'unknown' is not assignable to type '[[T, any], any]'.","category":1,"code":2322,"canonicalHead":{"code":2322,"messageText":"Type '[unknown, any]' is not assignable to type '[[[T, any], any], any]'."}}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '{ <U>(other: Immutable.Collection<unknown, U>): Immutable.Seq.Indexed<[T, U]>; <U, V>(other: Immutable.Collection<unknown, U>, other2: Immutable.Collection<unknown, V>): Immutable.Seq.Indexed<...>; (...collections: Immutable.Collection<...>[]): Immutable.Seq.Indexed<...>; }' is not assignable to type '{ <U>(other: Immutable.Collection<unknown, U>): Immutable.Collection.Indexed<[T, U]>; <U, V>(other: Immutable.Collection<unknown, U>, other2: Immutable.Collection<unknown, V>): Immutable.Collection.Indexed<...>; (...collections: Immutable.Collection<...>[]): Immutable.Collection.Indexed<...>; }'."}}]}]}},{"start":105059,"length":7,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Indexed<T>' incorrectly extends interface 'Seq<number, T>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'map(...).map(...).filter' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '{ <F extends any>(predicate: (value: any, index: number, iter: Indexed<any>) => value is F, context?: unknown): Indexed<F>; (predicate: (value: any, index: number, iter: Indexed<any>) => unknown, context?: unknown): Indexed<...>; }' is not assignable to type '{ <F extends any>(predicate: (value: any, key: any, iter: Seq<any, any>) => value is F, context?: unknown): Seq<any, F>; (predicate: (value: any, key: any, iter: Seq<any, any>) => unknown, context?: unknown): Seq<...>; }'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'predicate' and 'predicate' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type '(value: any, key: any, iter: Seq<any, any>) => unknown' is not assignable to type '(value: any, index: number, iter: Indexed<any>) => value is any'.","category":1,"code":2322,"next":[{"messageText":"Signature '(value: any, key: any, iter: Seq<any, any>): unknown' must be a type predicate.","category":1,"code":1224}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '<M>(mapper: (value: T, key: number, iter: this) => M, context?: unknown) => Indexed<M>' is not assignable to type '{ <M>(mapper: (value: T, key: number, iter: this) => M, context?: unknown): Seq<number, M>; <M>(mapper: (value: T, key: number, iter: this) => M, context?: unknown): Seq<M, M>; }'."}}]}]}},{"start":105707,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":106486,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":109798,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":109799,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":109819,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":110458,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":110514,"length":3,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Immutable.Seq.Set<T>' incorrectly extends interface 'Immutable.Collection.Set<T>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'concat(...).map(...).filter(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'Immutable.Set<string | Immutable.Seq.Set<any>> & Immutable.OrderedSet<string | Immutable.Seq.Set<any>>' is not assignable to type 'Immutable.Set<string | Immutable.Collection.Set<any>> & Immutable.OrderedSet<string | Immutable.Collection.Set<any>>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<string | Set<any>> & OrderedSet<string | Set<any>>' is not assignable to type 'Set<string | Set<any>>'.","category":1,"code":2322,"next":[{"messageText":"The types of 'toSeq().toOrderedSet().zip(...).toSeq().toList().zip(...).toSeq().zip(...).toStack().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Immutable.Collection<unknown, [[[[string | Immutable.Seq.Set<any>, any], any], any], any]>[]) => Immutable.Stack<[[[[string | Immutable.Seq.Set<any>, any], any], any], any]>' is not assignable to type '(...collections: Immutable.Collection<unknown, [[[[string | Immutable.Collection.Set<any>, any], any], any], any]>[]) => Immutable.Stack<[[[[string | Immutable.Collection.Set<any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Immutable.Collection<unknown, [[[[string | Immutable.Collection.Set<any>, any], any], any], any]>' is not assignable to type 'Immutable.Collection<unknown, [[[[string | Immutable.Seq.Set<any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Immutable.Collection.Set<any>' is not assignable to type 'string | Immutable.Seq.Set<any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<any>' is not assignable to type 'string | Set<any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<any>' is missing the following properties from type 'Set<any>': size, cacheResult","category":1,"code":2739,"canonicalHead":{"code":2322,"messageText":"Type 'Immutable.Collection.Set<any>' is not assignable to type 'Immutable.Seq.Set<any>'."}}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Immutable.Collection<unknown, [[[[string | Immutable.Collection.Set<any>, any], any], any], any]>' is not assignable to type 'Immutable.Collection<unknown, [[[[string | Immutable.Seq.Set<any>, any], any], any], any]>'."}}]}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Set<string | Set<any>> & OrderedSet<string | Set<any>>' is not assignable to type 'Set<string | Set<any>>'."}}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '<U>(...collections: Iterable<U>[]) => Immutable.Seq.Set<T | U>' is not assignable to type '<U>(...collections: Iterable<U>[]) => Immutable.Collection.Set<T | U>'."}}]}]}},{"start":110514,"length":3,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Set<T>' incorrectly extends interface 'Seq<T, T>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'map(...).map(...).filter' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '{ <F extends any>(predicate: (value: any, key: any, iter: Set<any>) => value is F, context?: unknown): Set<F>; (predicate: (value: any, key: any, iter: Set<any>) => unknown, context?: unknown): Set<any>; }' is not assignable to type '{ <F extends any>(predicate: (value: any, key: any, iter: Seq<any, any>) => value is F, context?: unknown): Seq<any, F>; (predicate: (value: any, key: any, iter: Seq<any, any>) => unknown, context?: unknown): Seq<...>; }'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'predicate' and 'predicate' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type '(value: any, key: any, iter: Seq<any, any>) => unknown' is not assignable to type '(value: any, key: any, iter: Set<any>) => value is any'.","category":1,"code":2322,"next":[{"messageText":"Signature '(value: any, key: any, iter: Seq<any, any>): unknown' must be a type predicate.","category":1,"code":1224}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '<M>(mapper: (value: T, key: T, iter: this) => M, context?: unknown) => Set<M>' is not assignable to type '{ <M>(mapper: (value: T, key: T, iter: this) => M, context?: unknown): Seq<T, M>; <M>(mapper: (value: T, key: T, iter: this) => M, context?: unknown): Seq<M, M>; }'."}}]}]}},{"start":111230,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":111924,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":112962,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":112963,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":112983,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":114025,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":114209,"length":3,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Seq<K, V>' incorrectly extends interface 'Collection<K, V>'.","category":1,"code":2430,"next":[{"messageText":"The types returned by 'map(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'Set<string | Seq<K, any>> & OrderedSet<string | Seq<K, any>>' is not assignable to type 'Set<string | Collection<K, any>> & OrderedSet<string | Collection<K, any>>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Set<string | Seq<K, any>> & OrderedSet<string | Seq<K, any>>' is not assignable to type 'Set<string | Collection<K, any>>'.","category":1,"code":2322,"next":[{"messageText":"Types of property 'add' are incompatible.","category":1,"code":2326,"next":[{"messageText":"Type '(value: string | Seq<K, any>) => Set<string | Seq<K, any>> & OrderedSet<string | Seq<K, any>>' is not assignable to type '(value: string | Collection<K, any>) => Set<string | Collection<K, any>>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'value' and 'value' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'string | Collection<K, any>' is not assignable to type 'string | Seq<K, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Collection<K, any>' is not assignable to type 'string | Seq<K, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Collection<K, any>' is missing the following properties from type 'Seq<K, any>': size, cacheResult","category":1,"code":2739,"canonicalHead":{"code":2322,"messageText":"Type 'Collection<K, any>' is not assignable to type 'Seq<K, any>'."}}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type 'Set<string | Seq<K, any>> & OrderedSet<string | Seq<K, any>>' is not assignable to type 'Set<string | Collection<K, any>>'."}}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '{ <M>(mapper: (value: V, key: K, iter: this) => M, context?: unknown): Seq<K, M>; <M>(mapper: (value: V, key: K, iter: this) => M, context?: unknown): Seq<M, M>; }' is not assignable to type '{ <M>(mapper: (value: V, key: K, iter: this) => M, context?: unknown): Collection<K, M>; (...args: never[]): unknown; }'."}}]}]}},{"start":116788,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":117072,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":119408,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":119545,"length":5,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Keyed<K, V>' incorrectly extends interface 'Collection<K, V>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'toSeq().map(...).map(...).groupBy(...).flip().toSeq().concat(...).toOrderedMap().flip().toSet().sort(...).toSeq().toOrderedSet().zip(...).toSeq().toList().zip(...).toSeq().zip(...).toStack().zip(...).interleave' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '(...collections: Collection<unknown, [[[[string | Keyed<K, any>, any], any], any], any]>[]) => Stack<[[[[string | Keyed<K, any>, any], any], any], any]>' is not assignable to type '(...collections: Collection<unknown, [[[[string | Seq<any, any>, any], any], any], any]>[]) => Stack<[[[[string | Seq<any, any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'collections' and 'collections' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type 'Collection<unknown, [[[[string | Seq<any, any>, any], any], any], any]>' is not assignable to type 'Collection<unknown, [[[[string | Keyed<K, any>, any], any], any], any]>'.","category":1,"code":2322,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"Type at position 0 in source is not compatible with type at position 0 in target.","category":1,"code":2626,"next":[{"messageText":"The types returned by 'get(...)' are incompatible between these types.","category":1,"code":2201,"next":[{"messageText":"Type 'string | Seq<any, any>' is not assignable to type 'string | Keyed<K, any>'.","category":1,"code":2322,"next":[{"messageText":"Type 'Seq<any, any>' is not assignable to type 'string | Keyed<K, any>'.","category":1,"code":2322}],"canonicalHead":{"code":2322,"messageText":"Type 'Collection<unknown, [[[[string | Seq<any, any>, any], any], any], any]>' is not assignable to type 'Collection<unknown, [[[[string | Keyed<K, any>, any], any], any], any]>'."}}]}]}]}]}]}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '() => Keyed<K, V>' is not assignable to type '() => Seq<K, V>'."}}]}]}},{"start":120775,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":123177,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":124297,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":124298,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":124318,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":125442,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":125514,"length":7,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Indexed<T>' incorrectly extends interface 'Collection<number, T>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'toSeq().map(...).map(...).filter' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '{ <F extends any>(predicate: (value: any, index: number, iter: Indexed<any>) => value is F, context?: unknown): Indexed<F>; (predicate: (value: any, index: number, iter: Indexed<any>) => unknown, context?: unknown): Indexed<...>; }' is not assignable to type '{ <F extends any>(predicate: (value: any, key: any, iter: Seq<any, any>) => value is F, context?: unknown): Seq<any, F>; (predicate: (value: any, key: any, iter: Seq<any, any>) => unknown, context?: unknown): Seq<...>; }'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'predicate' and 'predicate' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type '(value: any, key: any, iter: Seq<any, any>) => unknown' is not assignable to type '(value: any, index: number, iter: Indexed<any>) => value is any'.","category":1,"code":2322,"next":[{"messageText":"Signature '(value: any, key: any, iter: Seq<any, any>): unknown' must be a type predicate.","category":1,"code":1224}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '() => Indexed<T>' is not assignable to type '() => Seq<number, T>'."}}]}]}},{"start":132738,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":133566,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":134703,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":134704,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":134724,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":135681,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":135744,"length":3,"code":2430,"category":1,"messageText":{"messageText":"Interface 'Set<T>' incorrectly extends interface 'Collection<T, T>'.","category":1,"code":2430,"next":[{"messageText":"The types of 'toSeq().map(...).map(...).filter' are incompatible between these types.","category":1,"code":2200,"next":[{"messageText":"Type '{ <F extends any>(predicate: (value: any, key: any, iter: Set<any>) => value is F, context?: unknown): Set<F>; (predicate: (value: any, key: any, iter: Set<any>) => unknown, context?: unknown): Set<any>; }' is not assignable to type '{ <F extends any>(predicate: (value: any, key: any, iter: Seq<any, any>) => value is F, context?: unknown): Seq<any, F>; (predicate: (value: any, key: any, iter: Seq<any, any>) => unknown, context?: unknown): Seq<...>; }'.","category":1,"code":2322,"next":[{"messageText":"Types of parameters 'predicate' and 'predicate' are incompatible.","category":1,"code":2328,"next":[{"messageText":"Type '(value: any, key: any, iter: Seq<any, any>) => unknown' is not assignable to type '(value: any, key: any, iter: Set<any>) => value is any'.","category":1,"code":2322,"next":[{"messageText":"Signature '(value: any, key: any, iter: Seq<any, any>): unknown' must be a type predicate.","category":1,"code":1224}]}]}],"canonicalHead":{"code":2322,"messageText":"Type '() => Set<T>' is not assignable to type '() => Seq<T, T>'."}}]}]}},{"start":136420,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":137159,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":138248,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":138249,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":138269,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":139337,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":143093,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":143310,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":148647,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":148923,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":149228,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":149259,"length":17,"messageText":"A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type.","category":1,"code":1169},{"start":149260,"length":6,"messageText":"'Symbol' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later.","category":1,"code":2585},{"start":149280,"length":16,"messageText":"Cannot find name 'IterableIterator'.","category":1,"code":2304},{"start":160775,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":161094,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":168564,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":168688,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":188662,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":189197,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":189749,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":190328,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":190998,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":191122,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":191764,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":191790,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":192649,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":192675,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":193971,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":193997,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":195003,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":195029,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304}]],[62,[{"start":787,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":1761,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580}]],[66,[{"start":51,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":78,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583}]],[67,[{"start":520,"length":17,"code":2307,"category":1,"messageText":{"messageText":"Cannot find module 'rollup/parseAst' or its corresponding type declarations.","category":1,"code":2307,"next":[{"info":{"moduleReference":"rollup/parseAst"}}]}},{"start":561,"length":11,"messageText":"Cannot find module 'node:http' or its corresponding type declarations.","category":1,"code":2307},{"start":692,"length":11,"messageText":"Cannot find module 'node:http' or its corresponding type declarations.","category":1,"code":2307},{"start":739,"length":12,"messageText":"Cannot find module 'node:http2' or its corresponding type declarations.","category":1,"code":2307},{"start":773,"length":9,"messageText":"Cannot find module 'node:fs' or its corresponding type declarations.","category":1,"code":2307},{"start":808,"length":13,"messageText":"Cannot find module 'node:events' or its corresponding type declarations.","category":1,"code":2307},{"start":852,"length":13,"messageText":"Cannot find module 'node:events' or its corresponding type declarations.","category":1,"code":2307},{"start":942,"length":12,"messageText":"Cannot find module 'node:https' or its corresponding type declarations.","category":1,"code":2307},{"start":977,"length":10,"messageText":"Cannot find module 'node:net' or its corresponding type declarations.","category":1,"code":2307},{"start":1010,"length":10,"messageText":"Cannot find module 'node:url' or its corresponding type declarations.","category":1,"code":2307},{"start":1042,"length":10,"messageText":"Cannot find module 'node:url' or its corresponding type declarations.","category":1,"code":2307},{"start":1078,"length":13,"messageText":"Cannot find module 'node:stream' or its corresponding type declarations.","category":1,"code":2307},{"start":1131,"length":13,"messageText":"Cannot find module 'node:stream' or its corresponding type declarations.","category":1,"code":2307},{"start":2058,"length":10,"messageText":"Cannot find module 'node:tls' or its corresponding type declarations.","category":1,"code":2307},{"start":2098,"length":11,"messageText":"Cannot find module 'node:zlib' or its corresponding type declarations.","category":1,"code":2307},{"start":11545,"length":6,"messageText":"Cannot find namespace 'NodeJS'.","category":1,"code":2503},{"start":14096,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":36885,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":36934,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":36983,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37035,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37077,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37089,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37700,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37755,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37812,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37870,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":37882,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":38194,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":38366,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":38959,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":39014,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":39026,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":39064,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":39118,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":39180,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40153,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40233,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40708,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40758,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40805,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40849,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40893,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40940,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":40988,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":41000,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":41705,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":41749,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":41795,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":41842,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":41854,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":42203,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":42353,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":48832,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":50793,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":51284,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":51662,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":52163,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":52544,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":53040,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":53410,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":53829,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":54142,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":54576,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":54968,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":54991,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":55106,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":55129,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":55261,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":55270,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":56236,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":57424,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":57433,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":58425,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":59049,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":59294,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":63148,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":85264,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":87955,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580},{"start":97474,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":98176,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":99842,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":123401,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":146192,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":147575,"length":6,"messageText":"Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.","category":1,"code":2580}]],[71,[{"start":428,"length":3,"messageText":"Cannot find name 'Set'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583}]],[72,[{"start":2433,"length":7,"messageText":"Cannot find name 'WeakMap'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":2449,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":2488,"length":7,"messageText":"Cannot find name 'WeakMap'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583},{"start":3136,"length":3,"messageText":"Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.","category":1,"code":2583}]],[80,[{"start":1446,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304},{"start":13955,"length":9,"messageText":"Type alias 'ReactNode' circularly references itself.","category":1,"code":2456},{"start":14051,"length":8,"messageText":"Cannot find name 'Iterable'.","category":1,"code":2304}]]],"latestChangedDtsFile":"./vite.config.d.ts","version":"5.7.3"}